plugins {
    id 'java'
    id 'com.gradleup.shadow' version '9.0.0-beta4'

}

group = 'org.pixeldev'
version = '1.0.0-b'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }

}

dependencies {
    // Adventure (minimessage)
    implementation("net.kyori:adventure-api:4.14.0")
    implementation("net.kyori:adventure-text-minimessage:4.14.0")
    implementation("net.kyori:adventure-text-serializer-legacy:4.15.0")

    // JSON
    implementation 'com.google.code.gson:gson:2.11.0'

    // PlaceholderAPI
    compileOnly 'me.clip:placeholderapi:2.11.6'

    // Paper
    compileOnly("io.papermc.paper:paper-api:1.21.1-R0.1-SNAPSHOT")

    // JDA (Discord bots)
    implementation("net.dv8tion:JDA:5.2.2")


}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    archiveBaseName.set('PixelEssentials')
    archiveVersion.set('1.0.0-ba')
    archiveClassifier.set('')
    // Relocating jda
    relocate 'net.dv8tion.jda', 'org.pixeldev.pixelEssentials.shaded.jda'
}

build {
    dependsOn shadowJar
}

